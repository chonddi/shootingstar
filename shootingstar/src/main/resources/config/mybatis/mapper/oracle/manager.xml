<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sql.manager">
<sql id="searchSWhere">
			<where>
			membership>sysdate 
		<if test="searchKeyword !=null and searchKeyword !=''">
			and	${searchCondition} like '%' || #{searchKeyword} || '%'
		</if>
			</where>
	</sql>
<sql id="searchSOWhere">
			<where>
			sysdate>membership
		<if test="searchKeyword !=null and searchKeyword !=''">
			and	${searchCondition} like '%' || #{searchKeyword} || '%'
		</if>
			</where>
	</sql>	
<sql id="searchWhere">
		
		<if test="searchKeyword !=null and searchKeyword !=''">
			<where>
			${searchCondition} like '%' || #{searchKeyword} || '%'
			</where>
		</if>
	</sql>

<!-- 관리자페이지  -->
	<select id="selectID" parameterType="string" resultType="managerVo">
		select * from admin where adminId=#{adminId}
	</select>
	
	<select id="selectPwdById" parameterType="String" resultType="String">
		select pwd from admin where adminId=#{adminId}
	</select>
	
	<select id="selectNameById" parameterType="String" resultType="String">
		select adminName from admin where adminId=#{adminId}
	</select>
	
	<insert id="insertManager" parameterType="managerVo">
		insert into admin(adminId,adminName,pwd)
		values(#{adminId},#{adminName},#{pwd})
	</insert>
	
	<select id="checkDuplicate" parameterType="String" resultType="int">
		select count(*) from admin
		where adminId=#{adminId}
	</select>

	<update id="adminUpdate" parameterType="managerVo">
		update admin set adminName=#{adminName}
		where adminId=#{adminId} and pwd=#{pwd}
	</update>
	
	<update id="pwdUpdate" parameterType="managerVo">
		update admin set pwd=#{newPwd}
		where adminId=#{adminId}
	</update>
	
	
<!-- 회원관리 -->
	<select id="memberList" parameterType="SearchVO" resultType="memberVO">
<!-- 
		select rownum, memberId, name, pwd, tel, mileage, regdate, outdate 
		from member order by regdate desc -->
		
		select *
		from
		(
		    select rownum as RNUM, list.*
		    from (
		        select 
				rownum, memberId, name, pwd, tel, mileage, regdate, outdate 		
				 from member
				<include refid="searchWhere"></include>
				order by regdate desc
		    )list
		)    
		<![CDATA[
		where RNUM>#{firstRecordIndex} 
		and RNUM<=#{firstRecordIndex}+#{recordCountPerPage}
		]]>
	</select>
	<update id="updateMember" parameterType="memberVo">
		update member set name=#{name}, tel=#{tel}, mileage=#{mileage}
		where memberId=#{memberId}
	</update>
	<update id="memberOut" parameterType="MemberVO">
		update member set outdate=sysdate where memberId=#{memberId}
	</update>
	<update id="memberBack" parameterType="MemberVO">
		update member set outdate=''  where  memberId=#{memberId}
	</update>
	

	<select id="SMemberList" parameterType="SearchVO" resultType="SMemberVO">
		<!-- select rownum, sMemberId, sName, membership, authority, outdate
		from smember 
		where membership>sysdate
		order by membership -->
		select *
		from
		(
		    select rownum as RNUM, list.*
		    from (
		        select 
				rownum, sMemberId, sName, membership, authority, outdate 		
				 from smember
				<include refid="searchSWhere"></include>			
				order by regdate desc
		    )list
		)    
		<![CDATA[
		where RNUM>#{firstRecordIndex} 
		and RNUM<=#{firstRecordIndex}+#{recordCountPerPage}
		]]>
	</select>
	<update id="updateSMember" parameterType="SMemberVo">
		update smember set sName=#{sName},sTel=#{sTel}, pr=#{pr}, zipcode=#{zipcode}, address1=#{address1}, address2=#{address2},
		identification=#{identification}, accountCopy=#{accountCopy}
		where sMemberId=#{sMemberId}
	</update>
<!-- 	
	<update id="smemberAuOut" parameterType="SMemberVO"> 
		update smember set authority='Y' where  sMemberId=#{sMemberId}
	</update>
	
	<update id="smemberAuBack" parameterType="SMemberVO">
		update smember set authority='N'  where  sMemberId=#{sMemberId}
	</update> -->
	
	<update id="smemberOut" parameterType="SMemberVO">
		update smember set outdate=sysdate where sMemberId=#{sMemberId}
	</update>
	<update id="smemberBack" parameterType="SMemberVO">
		update smember set outdate=''  where  sMemberId=#{sMemberId}
	</update>
	
	
	<select id="SMemberOutList" parameterType="SearchVo" resultType="SMemberVO">
		select *
		from
		(
		    select rownum as RNUM, list.*
		    from (
		        select 
				rownum, sMemberId, sName, membership, authority, outdate 		
				 from smember
				<include refid="searchSOWhere"></include>			
				order by regdate desc
		    )list
		)    
		<![CDATA[
		where RNUM>#{firstRecordIndex} 
		and RNUM<=#{firstRecordIndex}+#{recordCountPerPage}
		]]>
	</select>
		
	<select id="getTotalRecord" parameterType="SearchVO" resultType="int">
		select count(*) from member
		<include refid="searchWhere"></include>		
	</select>
	<select id="getSTotalRecord" parameterType="SearchVO" resultType="int">
		select count(*) from smember
		<include refid="searchSWhere"></include>		
	</select>
	<select id="getSOTotalRecord" parameterType="SearchVO" resultType="int">
		select count(*) from smember
		<include refid="searchSOWhere"></include>		
	</select>
</mapper>
